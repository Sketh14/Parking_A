CAR PARKING
-------------------------------------------------------
- Cars can go backward/forward on the direction they are facing
- Car hits peds | Game Over
- If more than 1 car is on the road, and another car tries to get on the road
    [=] If there is space between the cars, then the car will get on the road between them
    [=] If there is no space, then the car will wait for both of them to pass, and then get on the road
    [=] If 2 cars are side by side, waiting to get on the road, then the car to the right will go first.
        {+} In case, both are trying to get on the road from downwards.
    [=] For 2 cars side-by-side, the car that comes first, going with clockwise direction, will go first
    [=] Show some emoji, when a car hits another car
    [=] Obstacles around the parking area, to blobk the car from moving
    [=] Cars follow point to point while on the road, no need for fancy animation of turning.
        {+} In case of getting on the road also, no turning animation, just quick turn to align with the road
    [=] Need to check for space before the oncoming car, if a car wants to get on the road
    [=] The car rotates from the pivot, no matter where it is hit to shake
        {+} If side, then to and fro
        {+} If frront/back, then that direction
    [=] Keep in mind, how a car turns, if going backwards, then turn to the direction of the road, not 360
    [=] Moved only counts when the vehicle has moved, even if the player has slid the vehicle, if it just
        collides with another vehicle, then it does not count
	[=] A vehicle is divided into smaller 2 parts width wise, maybe same for the length


--------------------------------------------------------------------------------------------------------------
                                                    15 May 2025
--------------------------------------------------------------------------------------------------------------
- Creating basic scene

- VehicleController
    [=] Single script to control all the vehicles | Lighten the burden of running multiple scripts
- InputManager
    [=] For managing all the inputs for the gameplay
    [=] Testing Unit Selection
        {+} Keeping track if user has let go or is still interacting [Click/Touch]
        {+} Slide Direction logic
- GameManager
    [=] Singleton to manage Gameplay
    [=] Adding action for selecting Unirs


- Vehicle Prefab
    [=] Basic vehicle prefab for now

--------------------------------------------------------------------------------------------------------------
                                                    16 May 2025
--------------------------------------------------------------------------------------------------------------
- InputManager
    [=] Debug Slide Direction
    [=] Making threshold values
    [=] Applying rotation to slideDir to coutner Camera's rotation
- VehicleController
    [=] Validating slideDir with Vehicle Orientation
        {+} Using Mathf.RoundToInt to set the threshold for slideDir for now
            <~> Too much chance to go in wrong direction
        {+} Setting threshold to slideDireation of 0.75f

- Scene
    [=] Adding Road Prefab
        {+} Adding Triggger to it for now
- VehicleController
    [=] Added status to keep track of Vehicle Status
    [=] Changing status accordingingly
    [=] Checking if the vehicle has reached the road or not

-Scene
    [=] Placing markers for road-turnings
- VehicleController | Ferry Logic
    [=] enum for VehicleStatus | RoadMarkers
    [=] Keeping points in a readonly array and updating through it
    [=] Markers for updating and keeping track of road-turnings
    [=] [BUG] Fixing Vehicle interaction setting when clicked once even for wrong slide direction

--------------------------------------------------------------------------------------------------------------
                                                    17 May 2025
--------------------------------------------------------------------------------------------------------------
- PoolManager
    [=] Singleton PoolManager for managing objects
    [=] Dictionary with ObjectPool for pooling vehicles for now
- VehicleSpawner
    [=] Non-Monobehvaiour class for spawning vehicles
    [=] Readonly array to contain border co-ordinates
- InputManager
    [=] Adding Layermask to raycasting | Fixing bug

- Scene
    [=] Making a rectangle parking lot to fit the window
        {+} New Dimension : 6X11
- VehicleController
    [=] Making adjustments according to the rectangle park
- VehicleSpawner
    [=] Making adjustments according to the rectangle park

- VehicleSpawner
    [=] Collision Detection

- VehicleSpawner
    [=] Setting a delay(10 ms) to collision detection checking so that the Physics System is updated
- GameManager
    [=] Adding action to show Vehicles have been spawned fully
- VehicleController
    [=] Adding callback for VehiclesSpawned

-Scene
    [=] Adding 2 more different vehicles
- VehicleSpawner
    [=] Different Vehicle Dimensions
    [=] Checking for collisions by taking different vehicle dimensions and rotations
    [=] Using Vehicle_Type to determine which random vehicle to spawn

--------------------------------------------------------------------------------------------------------------
                                                    18 May 2025
--------------------------------------------------------------------------------------------------------------
- Scene
    [=] Making snap settings to 0.05 on Y
    [=] Changing road prefab positions
    [=] Changing Vehicle size
        {+} Reducing by just a little on all sides so as to not collide with others and also fit in the grid-system
- VehicleSpawner
    [=] Changing road co-ordinates accordingly
    [=] Making grid-fill system
        {+} Making grid | Choosing random vehicle | Validating chosen cell

--------------------------------------------------------------------------------------------------------------
                                                    26 May 2025
--------------------------------------------------------------------------------------------------------------
- VehicleSpawner
    [=] Adding const for grid dimensions
    [=] Checking horizontal | vertical collisions separately

- VehicleSpawner
    [=] Assinging a random orientation and checking according to it
    [=] Check current cell and then cell in the chosen direction
    [=] After check is done, placing the vehicle in that section only
    [=] Leaving 1 cell gap from border for any wall placement
    [=] Setting position and rotation of the vehicles also
- PoolManager
    [=] Adding BLANK to PoolType

--------------------------------------------------------------------------------------------------------------
                                                    28 May 2025
--------------------------------------------------------------------------------------------------------------
- VehicleSpawner
    [=] Fixing spawn poistion code for small vehicles
    [=] Logic for vertical spawn of small vehicles 
    [=] Bounds Check/Cells Filled logic update

--------------------------------------------------------------------------------------------------------------
                                                    29 May 2025
--------------------------------------------------------------------------------------------------------------
- VehicleSpawner
    [=] Fixing bounds check logic

--------------------------------------------------------------------------------------------------------------
                                                    30 May 2025
--------------------------------------------------------------------------------------------------------------
- VehicleSpawner
    [=] Fixing bounds check logic again

- VehicleSpawner
    [=] Vehicle_3 spawn position logic

- VehicleSpawner
    [=] Adding y-position
- Project
    [=] Changing vehicle prefabs

- VehicleController
    [=] Moving OnVehicleSpawned code to a dedicated function and passing as callback to VehicleSpawner
- GameManager
    [=] Removing OnVehicleSpawned

- Project
    [=] Fixing Vehicle prefabs | Moving collider to parents
- Scripts
    [=] VehicleController
        {+} Correct vehicle direction when entering a road
        {+} Turning logic for road

- Scripts
    [=] VehicleController
        {+} Checking collisions with raycasts
            <~> Different ray positions for different vehicle types
            <~> Up detection
        {+} Adding VehicleType to VehicleInfo
    [=] VehicleSpawner
        {+} Sending vehicleTypes list back to VehicleController

- Scripts
    [=] VehicleController
        {+} Collision Detection | Changing to early block
        {+} Down/Left/Right detection
        {+} Setting rayDir according to the interacted direction
        {+} Using interacted direction to shift start-pos of raycast

--------------------------------------------------------------------------------------------------------------
                                                    31 May 2025
--------------------------------------------------------------------------------------------------------------
- Scripts
    [=] VehicleController
        {+} Adding constant for grid-cell size
        {+} Rounding z-position of collided vehicle down to the nearest multiple of 0.25
        {+} Adding Func for calling appropriate function while rounding position at collision
        {+} Adding readonly array to store Vehicle Sizes for rounding position
        {+} Not using the rounding method, as not reliable if the frame drops

- Scripts
    [=] VehicleController
        {+} Increasing rayStart position offset to 0.1
        {+} Setting other components of final position using vehicleSpawner array
        {+} Changing Func signature to Vec3 from float to change the entire Vec3 position

- Project
    [=] Adding Environment layer
- Scripts
    [=] VehicleController
        {+} Adding Environment to Collision-Check layer mask
        {+} Adding layer-mask to Raycast check


--------------------------------------------------------------------------------------------------------------
- [DO] [IMP] Boundary Checks
- [DO] [IMP] Collision Checks
    [=] When vehicle is moving
        {+} Check if collided wth another vehicle
        {+} Check if there is another vehicle on the road, before entering the road
    [=] What happens when the vehicle collides?
        {+} Reset the collision check
        {+} Do something to the collider and the one colliding
            <~> Shake the colliding vehicle
    [=] 2 conditions can give to collisions
        {+} When a vehicle is moving towards another vehicle
        {+} When a vehicle is moving into the road and another vehicle is in front
- [DO] Need to check in lower cells also, as the vehicles are 2 cells wide
- [DO] Divide into smaller sections
    [=] Move every 0.05 intervals
    [=] For Small Vehicle | Center will always be multiple of 0.5
    [=] For Medium Vehicle | Center will always in interval of 0.5 starting from the (-0.75 | 0.75)
    [=] For Large Vehicle | Center will always in interval of 0.5 starting from the (-1 | 1)
    [=] Since every Vehicle has the same width and only the length differs
        {+} Need to only change the length value, breadth value can remain the same
- [DO] Vehicle Collision Detection
    [=] Make sectors and add vehicles, for less load
- [DO] Pooling System
- [DO] Vehicle Placement around the parking lot
    [=] Can make a random placement logic, just checking if the car algined has a way to get out in any direction
- [Do] Vehicle shake
    [=] After collision, shake the vehicle
- [Do] Vehicle Collision Detection
    [=] Raycast front and back from sides?
        {+} Poking a little on the front and back to detect other vehicles
- [DO] Vehicles can lerp to rotate towards the next marker, so that the rotation fo vehicle does not goes wrong

- To check if the vehicles have reached the road or not?
    [=] Can use trigger | Would have to attach rigidbody to vehicles | would be unnecessary
    [=] Can just use co-ordinates, as the scene is not changing

- Limit Values
    [=] Taking Absolute values as the direction would not matter
        {+} The vehicle can go forward/backward
    [=] Threshold : 0.75 for both